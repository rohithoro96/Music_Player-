{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Web Development\\\\Music Player\\\\react-player\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleRight, faAngleLeft, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  currentSong,\n  isplaying,\n  setIsPlaying,\n  audioRef,\n  songs\n}) => {\n  _s();\n  //selecting HTML via useRef\n\n  const playSongHandler = () => {\n    if (isplaying) {\n      setIsPlaying(!isplaying);\n      audioRef.current.pause();\n    } else {\n      setIsPlaying(!isplaying);\n      audioRef.current.play();\n    }\n  };\n  //timeUpateHandler\n  const timeUpateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({\n      ...songinfo,\n      currentTime: current,\n      duration: duration\n    });\n  };\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n  const [songinfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({\n      ...songinfo,\n      currentTime: e.target.value\n    });\n  };\n  const skipTrackHandler = direction => {\n    const currentIndex = songs.Index();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songinfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 0,\n        max: songinfo.duration,\n        value: songinfo.currentTime,\n        onChange: dragHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songinfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        icon: faAngleLeft,\n        size: \"2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: isplaying ? faPause : faPlay,\n        size: \"2x\",\n        onClick: playSongHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        icon: faAngleRight,\n        size: \"2x\",\n        onClick: () => {\n          skipTrackHandler('skip-forward');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: currentSong.audio,\n      ref: audioRef,\n      onTimeUpdate: timeUpateHandler,\n      onLoadedMetadata: timeUpateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Player, \"nRwz2w71Sd57hKWn/q497UxzVfA=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faPlay","faAngleRight","faAngleLeft","faPause","jsxDEV","_jsxDEV","Player","currentSong","isplaying","setIsPlaying","audioRef","songs","_s","playSongHandler","current","pause","play","timeUpateHandler","e","target","currentTime","duration","setSongInfo","songinfo","getTime","time","Math","floor","slice","dragHandler","value","skipTrackHandler","direction","currentIndex","Index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","icon","size","onClick","src","audio","ref","onTimeUpdate","onLoadedMetadata","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Web Development/Music Player/react-player/src/components/Player.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faAngleRight, faAngleLeft, faPause } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Player = ({ currentSong, isplaying, setIsPlaying, audioRef, songs }) => {\r\n\r\n    //selecting HTML via useRef\r\n\r\n    const playSongHandler = () => {\r\n        if (isplaying) {\r\n            setIsPlaying(!isplaying);\r\n            audioRef.current.pause()\r\n        } else {\r\n            setIsPlaying(!isplaying)\r\n            audioRef.current.play()\r\n        }\r\n    }\r\n    //timeUpateHandler\r\n    const timeUpateHandler = (e) => {\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        setSongInfo({ ...songinfo, currentTime: current, duration: duration })\r\n\r\n    }\r\n\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    }\r\n    const [songinfo, setSongInfo] = useState({\r\n        currentTime: 0,\r\n        duration: 0\r\n    })\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...songinfo, currentTime: e.target.value })\r\n    }\r\n    const skipTrackHandler = (direction) => {\r\n        const currentIndex = songs.Index()\r\n    }\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songinfo.currentTime)}</p>\r\n                <input type=\"range\" min={0} max={songinfo.duration} value={songinfo.currentTime} onChange={dragHandler} />\r\n                <p>{getTime(songinfo.duration)}</p>\r\n\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon className=\"skip-back\" icon={faAngleLeft} size=\"2x\" />\r\n                <FontAwesomeIcon icon={isplaying ? faPause : faPlay} size=\"2x\" onClick={playSongHandler} />\r\n                <FontAwesomeIcon className=\"skip-forward\" icon={faAngleRight} size=\"2x\" onClick={() => { skipTrackHandler('skip-forward') }} />\r\n            </div>\r\n            <audio src={currentSong.audio} ref={audioRef} onTimeUpdate={timeUpateHandler} onLoadedMetadata={timeUpateHandler}></audio>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}