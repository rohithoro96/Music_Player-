{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Web Development\\\\Music Player\\\\react-player\\\\src\\\\components\\\\LibrarySongs.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LibrarySongs = ({\n  songs,\n  setCurrentsong,\n  song,\n  id,\n  audioRef,\n  isplaying\n}) => {\n  const selectsongHandler = () => {\n    const selectedSong = songs.filter(theSong => theSong.id === id);\n    setCurrentsong(selectedSong[0]);\n    if (isplaying) {\n      const playAudio = audioRef.current.play();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"library-song\",\n    onClick: selectsongHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = LibrarySongs;\nexport default LibrarySongs;\nvar _c;\n$RefreshReg$(_c, \"LibrarySongs\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LibrarySongs","songs","setCurrentsong","song","id","audioRef","isplaying","selectsongHandler","selectedSong","filter","theSong","playAudio","current","play","className","onClick","children","src","cover","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","artist","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Web Development/Music Player/react-player/src/components/LibrarySongs.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LibrarySongs = ({ songs, setCurrentsong, song, id, audioRef, isplaying }) => {\r\n\r\n    const selectsongHandler = () => {\r\n        const selectedSong = songs.filter(theSong => theSong.id === id);\r\n        setCurrentsong(selectedSong[0])\r\n\r\n        if (isplaying) {\r\n            const playAudio = audioRef.current.play()\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"library-song\" onClick={selectsongHandler}>\r\n            <img src={song.cover} alt={song.name} />\r\n            <div className=\"song-description\">\r\n                <h2>{song.name}</h2>\r\n                <h3>{song.artist}</h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySongs;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC,IAAI;EAAEC,EAAE;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAE/E,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,YAAY,GAAGP,KAAK,CAACQ,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACN,EAAE,KAAKA,EAAE,CAAC;IAC/DF,cAAc,CAACM,YAAY,CAAC,CAAC,CAAC,CAAC;IAE/B,IAAIF,SAAS,EAAE;MACX,MAAMK,SAAS,GAAGN,QAAQ,CAACO,OAAO,CAACC,IAAI,CAAC,CAAC;IAI7C;EAMJ,CAAC;EACD,oBACId,OAAA;IAAKe,SAAS,EAAC,cAAc;IAACC,OAAO,EAAER,iBAAkB;IAAAS,QAAA,gBACrDjB,OAAA;MAAKkB,GAAG,EAAEd,IAAI,CAACe,KAAM;MAACC,GAAG,EAAEhB,IAAI,CAACiB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCzB,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAE,QAAA,gBAC7BjB,OAAA;QAAAiB,QAAA,EAAKb,IAAI,CAACiB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBzB,OAAA;QAAAiB,QAAA,EAAKb,IAAI,CAACsB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAE,EAAA,GA5BK1B,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}