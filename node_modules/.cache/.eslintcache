[{"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\player.js":"3","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Player.js":"4","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Song.js":"5","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\Util.js":"6","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Library.js":"7","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\LibrarySongs.js":"8","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Nav.js":"9","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\Audio_player.js":"10"},{"size":449,"mtime":1697689834749,"results":"11","hashOfConfig":"12"},{"size":1113,"mtime":1698821198910,"results":"13","hashOfConfig":"12"},{"size":392,"mtime":1697692457951,"results":"14","hashOfConfig":"12"},{"size":3864,"mtime":1698763255601,"results":"15","hashOfConfig":"12"},{"size":300,"mtime":1698217084710,"results":"16","hashOfConfig":"12"},{"size":862,"mtime":1698675071997,"results":"17","hashOfConfig":"12"},{"size":707,"mtime":1698671718109,"results":"18","hashOfConfig":"12"},{"size":1395,"mtime":1698722008186,"results":"19","hashOfConfig":"12"},{"size":562,"mtime":1698760081601,"results":"20","hashOfConfig":"12"},{"size":358,"mtime":1698762619363,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"xgwvcj",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\index.js",[],[],["54"],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\App.js",[],[],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\player.js",[],[],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Player.js",["55","56"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Audio_player } from \"../Audio_player\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faAngleRight, faAngleLeft, faPause } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Player = ({ currentSong, isplaying, setIsPlaying, audioRef, songs, setCurrentsong, setSongs }) => {\r\n\r\n    //useEffect\r\n    useEffect(() => {\r\n        const selectedAudio = songs.map((song) => {\r\n            if (song.id === currentSong.id) {\r\n                return {\r\n                    ...song, active: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...song, active: false\r\n                }\r\n            }\r\n        });\r\n        setSongs(selectedAudio)\r\n    }, [currentSong])\r\n\r\n    //selecting HTML via useRef\r\n\r\n    const playSongHandler = () => {\r\n        if (isplaying) {\r\n            setIsPlaying(!isplaying);\r\n            audioRef.current.pause()\r\n        } else {\r\n            setIsPlaying(!isplaying)\r\n            audioRef.current.play()\r\n        }\r\n    }\r\n    //timeUpateHandler\r\n    const timeUpateHandler = (e) => {\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        setSongInfo({ ...songinfo, currentTime: current, duration: duration })\r\n\r\n    }\r\n\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    }\r\n    const [songinfo, setSongInfo] = useState({\r\n        currentTime: 0,\r\n        duration: 0\r\n    })\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...songinfo, currentTime: e.target.value })\r\n    }\r\n    const skipTrackHandler = async (direction) => {\r\n        const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if (direction === \"skip-forward\") {\r\n            await setCurrentsong(songs[(currentIndex + 1) % songs.length]);\r\n\r\n        }\r\n        if (direction === \"skip-back\") {\r\n            if (((currentIndex - 1) % songs.length === -1)) {\r\n                await setCurrentsong(songs[songs.length - 1]);\r\n                if (isplaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentsong(songs[(currentIndex - 1) % songs.length])\r\n        }\r\n        if (isplaying) audioRef.current.play();\r\n    }\r\n\r\n    //SongEnd Handler\r\n    const songEndHandler = async () => {\r\n        const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        await setCurrentsong(songs[(currentIndex + 1) % songs.length]);\r\n        if (isplaying) {\r\n\r\n            setTimeout(() => {\r\n\r\n                audioRef.current.play()\r\n            }, 2000)\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songinfo.currentTime)}</p>\r\n                <input type=\"range\" min={0} max={songinfo.duration || 0} value={songinfo.currentTime} onChange={dragHandler} />\r\n                <p>{songinfo.duration ? getTime(songinfo.duration) : \"0.00\"}</p>\r\n\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon className=\"skip-back\" icon={faAngleLeft} size=\"2x\" onClick={() => { skipTrackHandler('skip-back') }} />\r\n                <FontAwesomeIcon icon={isplaying ? faPause : faPlay} size=\"2x\" onClick={playSongHandler} />\r\n                <FontAwesomeIcon className=\"skip-forward\" icon={faAngleRight} size=\"2x\" onClick={() => { skipTrackHandler('skip-forward') }} />\r\n            </div>\r\n            <audio src={currentSong.audio} ref={audioRef} onTimeUpdate={timeUpateHandler} onLoadedMetadata={timeUpateHandler} onEnded={songEndHandler}></audio>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Song.js",["57"],[],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\Util.js",[],[],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Library.js",[],[],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\LibrarySongs.js",[],[],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\components\\Nav.js",[],[],"C:\\Users\\ASUS\\Desktop\\Web Development\\Music Player\\react-player\\src\\Audio_player.js",[],[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":21,"column":8,"nodeType":"66","endLine":21,"endColumn":21,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":13,"nodeType":"70","endLine":6,"endColumn":44},"no-new-object",["71"],"no-unused-vars","'Audio_player' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-object-constructor",{"desc":"73","fix":"74"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"75","text":"76"},[782,795],"[currentSong, setSongs, songs]"]